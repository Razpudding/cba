import { LocalizedString } from './LocalizedString';
/**
 * Describes the presence of staff and their qualifications and/or provided services.
 */
export interface WifiAccessibility {
    /**
     * `true` if the wifi is open to everyone, `false` if it is explicitly not.
     */
    isOpenToEveryone?: boolean;
    /**
     * `true` if the wifi is open to explicit place visitors, `false` if explicitly not.
     */
    isOpenToVisitors?: boolean;
    /**
     * `true` if the wifi is open to explicit place staff, `false` if explicitly not.
     */
    isOpenToStaff?: boolean;
    /**
     * `true` if the wifi has a fixed password. Knowing this password must be enough to enter and use the wifi.
     */
    hasFixedPassword?: boolean;
    /**
     * A string with the Wifi name (SSID). Only use this attribute if security allows to publish this info online publicly.
     */
    ssid?: string;
    /**
     * A string with the Wifi password. Only use this attribute if security allows to publish this info online publicly.
     */
    password?: string;
    /**
     * `true` if the wifi has a fixed password. Knowing this password must be enough to enter and use the wifi.
     */
    needsGuestPass?: boolean;
    /**
     * Describes where you get the login data / guest pass.
     */
    descriptionWhereToGetLoginData?: LocalizedString;
    /**
     * `true` if the wifi has a captive portal website.
     */
    hasCaptivePortal?: boolean;
    /**
     * `true` if the wifi captive portal is accessible (WAI/ARIA).
     */
    isCaptivePortalAccessible?: boolean;
}
export declare const WifiAccessibilitySchema: import("./SimpleSchemaExtensions").ExtendedSchema;
